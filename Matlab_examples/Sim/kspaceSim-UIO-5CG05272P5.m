
showSignal=0 %show kspace sigla as well

for model =17
    addpath R:\Felles_PCRTP\div
    clearvars -except model showSignal
    %model = 3;
    N = 20; %pixel size
    rho = ones(N,N); %proton density
    T2Decay=false; %defalyt false.
    OneEightyPulse=[]; %default empty
     t2factor = 0.9992; %defalut
    switch model
        case 1 %simple gx
            T = 100; %tot no time steps
            Gx_strength = [zeros(1,25)  ones(1,50)   zeros(1,25)]*0.05; %T/pixel
            Gy_strength = [zeros(1,T)]*0.05; %T/pixel
            textString = 'SimpleGX';
        case 2 %simple gx
            T = 100; %tot no time steps
            Gx_strength = [zeros(1,T)]*0.05; %T/pixel
            Gy_strength = [zeros(1,25)  ones(1,50)   zeros(1,25)]*0.05; %T/pixel
            textString = 'SimpleGY';
        case 3 %simple gx+gy
            T = 100; %tot no time steps
            Gx_strength = [zeros(1,10)  ones(1,40)  zeros(1,40)  zeros(1,10)]*0.05; %T/pixel
            Gy_strength = [zeros(1,10)  zeros(1,40)  ones(1,40)  zeros(1,10)]*0.05; %T/pixel
            textString = 'SimpleGXandGY';
        case 4 %simple gx+gy
            T = 250; %tot no time steps
            omega = .5;
            v=.5;
            tvec = 1:T
            Gx_strength = [v*tvec.*cos(omega*tvec)]*0.02; %T/pixel
            Gy_strength = [v*tvec.*sin(omega*tvec)]*0.02; %T/pixel
            textString = 'Spiral';
        case 5
            Gx_strength = [zeros(1,10)  -ones(1,40) zeros(1,10) zeros(1,20)   zeros(1,10) ones(1,80)    zeros(1,10) -ones(1,40) zeros(1,10)]*0.05; %T/pixel
            Gy_strength = [zeros(1,10)  zeros(1,40) zeros(1,10) ones(1,20)  zeros(1,10)   zeros(1,80)   zeros(1,10) -ones(1,40)/2  zeros(1,10)]*0.05; %T/pixel
            T=length(Gx_strength)
            textString = 'GRE_readout';
        case 6
            Gx_strength = [zeros(1,10)  -ones(1,40) zeros(1,10) zeros(1,20)   zeros(1,10) ones(1,80)    zeros(1,10) -ones(1,40) zeros(1,10)]*0.15; %T/pixel
            Gy_strength = [zeros(1,10)  zeros(1,40) zeros(1,10) ones(1,20)  zeros(1,10)   zeros(1,80)   zeros(1,10) -ones(1,40)/2  zeros(1,10)]*0.15; %T/pixel
            T=length(Gx_strength)
            textString = 'GRE_readout_withInterestinRho1';
            for n=1:N
                rho(n,:) = abs(cos(2*pi*n/N*2));
            end
        case 7
            Gx_strength = [zeros(1,10)  -ones(1,40) zeros(1,10) zeros(1,20)   zeros(1,10) ones(1,80)    zeros(1,10) -ones(1,40) zeros(1,10)]*0.15; %T/pixel
            Gy_strength = [zeros(1,10)  zeros(1,40) zeros(1,10) ones(1,20)  zeros(1,10)   zeros(1,80)   zeros(1,10) -ones(1,40)/2  zeros(1,10)]*0.15; %T/pixel
            T=length(Gx_strength)
            textString = 'GRE_readout_withInterestinRho2_tooWeakGrad';
            for n=1:N
                rho(n,:) = abs(cos(2*pi*n/N*3));
            end
        case 8
            Gx_strength = [zeros(1,10)  -ones(1,40) zeros(1,10) zeros(1,20)   zeros(1,10) ones(1,80)    zeros(1,10) -ones(1,40) zeros(1,10)]*0.25; %T/pixel
            Gy_strength = [zeros(1,10)  zeros(1,40) zeros(1,10) ones(1,20)  zeros(1,10)   zeros(1,80)   zeros(1,10) -ones(1,40)/2  zeros(1,10)]*0.25; %T/pixel
            T=length(Gx_strength)
            textString = 'GRE_readout_withInterestinRho2_strongerGrad';
            for n=1:N
                rho(n,:) = abs(cos(2*pi*n/N*3));
            end
        case 9
            Gx_strength = [zeros(1,10)  -ones(1,40) zeros(1,10) zeros(1,20)   zeros(1,10) ones(1,80)    zeros(1,10) -ones(1,40) zeros(1,10)]*0.25; %T/pixel
            Gy_strength = [zeros(1,10)  zeros(1,40) zeros(1,10) ones(1,20)  zeros(1,10)   zeros(1,80)   zeros(1,10) -ones(1,40)/2  zeros(1,10)]*0.25; %T/pixel
            T=length(Gx_strength)
            textString = 'GRE_readout_withInterestinRho3';
            for n1=1:N
                for n2=1:N
                    rho(n1,n2) = (abs(cos(2*pi*(n1+n2)/N*2)));
                end
            end
        case 10
            Gx_strength = [zeros(1,10)  +ones(1,40) zeros(1,10) ...
                -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)]*0.15; %T/pixel

            Gy_strength = [zeros(1,10)  ones(1,40) zeros(1,10)...
                zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)]*0.15; %T/pixel
            T=length(Gx_strength)
            textString = 'EPI_readout';
        case 11
            Gx_strength = [zeros(1,10)  +ones(1,40) zeros(1,10) ...
                -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)]*0.15; %T/pixel

            Gy_strength = [zeros(1,10)  ones(1,40) zeros(1,10)...
                zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)]*0.15; %T/pixel
            T=length(Gx_strength);
            for n1=1:N
                for n2=1:N
                    rho(n1,n2) = (abs(cos(2*pi*(n1+n2)/N*2)));
                end
            end
            textString = 'EPI_readout_withInterestingRho';
        case 12 %image"!
            Gx_strength = [zeros(1,10)  +ones(1,40) zeros(1,10) ...
                -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)]*0.15; %T/pixel

            Gy_strength = [zeros(1,10)  ones(1,40) zeros(1,10)...
                zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)]*0.15; %T/pixel
            T=length(Gx_strength);

            image=imcomplement(imread('smiling_face.bmp'));
            image=double(image(:,:,1))';
            image=fliplr(image);
            rho=imresize(image,[N N],'bilinear')/max(image(:));

            textString = 'EPI_readout_withImage';
        case 13 %spiral with image
            T = 250; %tot no time steps
            omega = .5;
            v=.5;
            tvec = 1:T
            Gx_strength = [v*tvec.*cos(omega*tvec)]*0.05; %T/pixel
            Gy_strength = [v*tvec.*sin(omega*tvec)]*0.05; %T/pixel
            image=imcomplement(imread('smiling_face.bmp'));
            image=double(image(:,:,1))';
            image=fliplr(image);
            rho=imresize(image,[N N],'bilinear')/max(image(:));

            textString = 'SpiralwithImage';
        case 14
            Gx_strength = [zeros(1,10)  +ones(1,40) zeros(1,10) ...
                -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)...
                zeros(1,5) -ones(1,80) zeros(1,10)...
                zeros(1,5) ones(1,80) zeros(1,10)]*0.15; %T/pixel

            Gy_strength = [zeros(1,10)  ones(1,40) zeros(1,10)...
                zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)...
                -ones(1,5)/2   zeros(1,80) zeros(1,10)]*0.15; %T/pixel
            T=length(Gx_strength)
            textString = 'EPI_readout_withT2decay';
            T2Decay = true;

        case 15
            Gx_strength = [zeros(1,10)  ones(1,40) zeros(1,10)  zeros(1,10) ones(1,80)    zeros(1,10) -ones(1,40) zeros(1,10)]*0.05; %T/pixel
            Gy_strength = [zeros(1,10)  ones(1,40)/2 zeros(1,10)  zeros(1,10)   zeros(1,80)   zeros(1,10) ones(1,40)/2  zeros(1,10)]*0.05; %T/pixel
            OneEightyPulse = 60;
            T=length(Gx_strength);
            textString = 'SE_readout';
        case 16
            Gx_strength = [zeros(1,5) ones(1,40)...
                zeros(1,10) ... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                 ]*0.15; %T/pixel

            Gy_strength = [zeros(1,5) zeros(1,40)...
                zeros(1,10)... %RF pulse!
                ones(1,10)*15   zeros(1,80) -ones(1,10)*15,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*10   zeros(1,80) -ones(1,10)*10,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*5   zeros(1,80) -ones(1,10)*5,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*0   zeros(1,80) -ones(1,10)*0,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*-5   zeros(1,80) -ones(1,10)*-5,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*-10   zeros(1,80) -ones(1,10)*-10,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*-15   zeros(1,80) -ones(1,10)*-15,...
                zeros(1,10)... 
                ]*0.15/5; %T/pixel
            T=length(Gx_strength);
            textString = 'FSE_readout_withoutT2decay';
            T2Decay = false;
             OneEightyPulse = [50 160 270 380 490 600 710 820];
        case 17
            Gx_strength = [zeros(1,5) ones(1,40)...
                zeros(1,10) ... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                zeros(1,10) ones(1,80) zeros(1,10)...
                zeros(1,10)... %RF pulse!
                 ]*0.15; %T/pixel

            Gy_strength = [zeros(1,5) zeros(1,40)...
                zeros(1,10)... %RF pulse!
                ones(1,10)*15   zeros(1,80) -ones(1,10)*15,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*10   zeros(1,80) -ones(1,10)*10,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*5   zeros(1,80) -ones(1,10)*5,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*0   zeros(1,80) -ones(1,10)*0,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*-5   zeros(1,80) -ones(1,10)*-5,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*-10   zeros(1,80) -ones(1,10)*-10,...
                zeros(1,10)... %RF pulse!
                ones(1,10)*-15   zeros(1,80) -ones(1,10)*-15,...
                zeros(1,10)... 
                ]*0.15/5; %T/pixel
            T=length(Gx_strength);
            textString = 'FSE_readout_withT2decay';
            T2Decay = true;
             OneEightyPulse = [50 160 270 380 490 600 710 820];
             t2factor = 0.997;
    end
    kx = zeros(1,T);
    ky = zeros(1,T);

    dt = 1e-9; %time step

    gamma = 267.513e6; %rad/sT

    theta = zeros(N,N,T);
    theta(1:N,1:N,1) = rho;

    for t=2:T
        kx(t) = kx(t-1)+gamma/2/pi*sum(Gx_strength(t));
        ky(t) = ky(t-1)+gamma/2/pi*sum(Gy_strength(t));
        if ismember(t,OneEightyPulse)
            kx(t) = -kx(t);
            ky(t) = -ky(t);
        end
        for x=1:N
            for y=1:N
                omega = gamma*(Gx_strength(t)*(x-N/2)+Gy_strength(t)*(y-N/2));
                dTheta = exp(1i*omega*dt);
                theta(x,y,t)=theta(x,y,t-1).*dTheta;
                if T2Decay
                    theta(x,y,t)=theta(x,y,t)*t2factor;
                end
            end
        end

        if ismember(t,OneEightyPulse)
            theta(:,:,t) = conj(theta(:,:,t));
        end
        allVecs = theta(:,:,t);
        kSpaceSignal_f_of_t(t) = abs(sum(allVecs(:)));
    end
    %%
    movmake=true;
    if movmake
        %%% Invisible movie creator: initialize %%%
        filename =strcat(['movies\sim_kspace_',textString,'_',num2str(randi(10000))]);
        myVideo = VideoWriter(filename,'MPEG-4');
        myVideo.FrameRate = 12;
        myVideo.Quality = 85;
        open(myVideo)
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    end
    t_to_run = unique(sort([round(linspace(1,T,200)) OneEightyPulse]));

    for t=t_to_run
        %%
        if ismember(t,OneEightyPulse)
            for tt=1:25
                F=figure;

                subtightplot(4,4,9,.05,.05,.05)
                if showSignal
                    plot([-1 1]*max([abs(kx) abs(ky)]),[0 0],'-k')
                    hold on
                    plot([0 0],[-1 1]*max([abs(kx) abs(ky)]),'-k')
                    % plot(kx(1:t),ky(1:t),'k','LineWidth',2)
                    kx_sofar = kx(1:t-1);
                    ky_sofar = ky(1:t-1);
                    kSpaceSignal_f_of_t_sofar = kSpaceSignal_f_of_t(1:t-1);
                    [dummy orderOfIncreasingSignal] = sort(kSpaceSignal_f_of_t_sofar);
                    for ttt=1:t-1
                        t_to_plot = orderOfIncreasingSignal(ttt);
                        colorPower = 5*kSpaceSignal_f_of_t(t_to_plot)/max(kSpaceSignal_f_of_t);
                        colorPower(colorPower>1)=1;

                        plot(kx(t_to_plot),ky(t_to_plot),'o','Color',[1 1 1]*colorPower,'MarkerSize',5,'MarkerFaceColor',[1 1 1]*colorPower)
                    end
                    % plot(kx(t),ky(t),'ok','MarkerSize',10,'MarkerFaceColor',[1 1 1]*kSpaceSignal_f_of_t/max(kSpaceSignal_f_of_t))
                    plot(kx(t-1)-2*kx(t-1)/10*tt,ky(t-1)-2*ky(t-1)/10*tt,'o','LineWidth',5,'MarkerSize',10,'Color',[1 0 0])
                    xlabel('kx')
                    ylabel('ky')
                    axis equal
                    set(gca,'Color','k')
                    try
                        axis([[-1.1 1.1]*max(abs(kx)) [-1.1 1.1]*max(abs(ky))])
                    end
                else
                    plot([-1 1]*max([abs(kx) abs(ky)]),[0 0],'-k')
                    hold on
                    plot([0 0],[-1 1]*max([abs(kx) abs(ky)]),'-k')
                    plot(kx(1:t),ky(1:t),'k','LineWidth',2)
                    plot(kx(t),ky(t),'ok','MarkerSize',10,'MarkerFaceColor','k')
                    xlabel('kx')
                    ylabel('ky')
                    axis equal
                end

                subtightplot(4,4,[2:4 6:8 10:12 14:16],.05,.05,.05)
                for x=1:N
                    for y=1:N
                        % viscircles([x y],.4,'Color','k','LineWidth',1)
                        hold on
                        p=plot(x,y,'ok','MarkerSize',.1+40*abs(theta(x,y,t-1))) ;
                        plot([0 real(theta(x,y,t-1))]*.4+x,[0 imag(theta(x,y,t-1))-2*imag(theta(x,y,t-1))/10*tt]*.4+y,'Color','k','LineWidth',5);
                        cmap = hot;
                        cmap=flipud(cmap);
                        cmap=cmap(20:end-20,:);
                        set(p,'MarkerFaceColor',cmap(round(abs(angle(theta(x,y,t-1)))/pi*215)+1,:))
                    end
                end
                set(gca,'CameraViewAngleMode','Manual')
                set(gcf,'color','w');
                axis([-1 N+1 -1 N+1])
                axis off
                title('Flipping...')
                pause(.01)
                if movmake
                    % set(gcf,'Position',UserParam.FullSizeFigurePosition)
                    set(gcf,'units','normalized','outerposition',[0 0 1 1])
                    %%% Invisible movie creator: Frame capture %%%
                    %img = hardcopy(F, '-dzbuffer', '-r0');
                    %%
                    %figure(F)
                    writeVideo(myVideo,getframe(F));
                    pause(.01)
                    close
                    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                end
            end
        end
        F=figure;

        subtightplot(4,4,1,.05,.05,.05)
        plot(Gx_strength,'k','LineWidth',2)
        hold on
        plot(t,Gx_strength(t),'ok')
        plot(Gx_strength*0,':k')
        plot(t*[1 1],[-1.1 1.1]*max([abs(Gx_strength) abs(Gy_strength)]),'--k')
        xlabel('Time')
        ylabel('Gx')
        for ii=1:length(OneEightyPulse)
            plot(OneEightyPulse(ii)*[1 1],ylim,'r','LineWidth',1)
            text(OneEightyPulse(ii),max(ylim),' 180^o')
        end

        subtightplot(4,4,5,.05,.05,.05)
        plot(Gy_strength,'k','LineWidth',2)
        hold on
        plot(t,Gy_strength(t),'ok')
        plot(Gy_strength*0,':k')
        plot(t*[1 1],[-1.1 1.1]*max([abs(Gx_strength) abs(Gy_strength)]),'--k')
        xlabel('Time')
        ylabel('Gy')
        for ii=1:length(OneEightyPulse)
            plot(OneEightyPulse(ii)*[1 1],ylim,'r','LineWidth',1)
            text(OneEightyPulse(ii),max(ylim),' 180^o')
        end

        subtightplot(4,4,9,.05,.05,.05)
        if showSignal
            plot([-1 1]*max([abs(kx) abs(ky)]),[0 0],'-k')
            hold on
            plot([0 0],[-1 1]*max([abs(kx) abs(ky)]),'-k')
            % plot(kx(1:t),ky(1:t),'k','LineWidth',2)
            kx_sofar = kx(1:t);
            ky_sofar = ky(1:t);
            kSpaceSignal_f_of_t_sofar = kSpaceSignal_f_of_t(1:t);
            [dummy orderOfIncreasingSignal] = sort(kSpaceSignal_f_of_t_sofar);
            for tt=1:t
                t_to_plot = orderOfIncreasingSignal(tt);
                colorPower = 5*kSpaceSignal_f_of_t(t_to_plot)/max(kSpaceSignal_f_of_t);
                colorPower(colorPower>1)=1;

                plot(kx(t_to_plot),ky(t_to_plot),'o','Color',[1 1 1]*colorPower,'MarkerSize',5,'MarkerFaceColor',[1 1 1]*colorPower)
            end
            % plot(kx(t),ky(t),'ok','MarkerSize',10,'MarkerFaceColor',[1 1 1]*kSpaceSignal_f_of_t/max(kSpaceSignal_f_of_t))
            plot(kx(t),ky(t),'o','LineWidth',5,'MarkerSize',10,'Color',[1 0 0])
            xlabel('kx')
            ylabel('ky')
            axis equal
            set(gca,'Color','k')
            try
                axis([[-1.1 1.1]*max(abs(kx)) [-1.1 1.1]*max(abs(ky))])
            end
        else
            plot([-1 1]*max([abs(kx) abs(ky)]),[0 0],'-k')
            hold on
            plot([0 0],[-1 1]*max([abs(kx) abs(ky)]),'-k')
            plot(kx(1:t),ky(1:t),'k','LineWidth',2)
            plot(kx(t),ky(t),'ok','MarkerSize',10,'MarkerFaceColor','k')
            xlabel('kx')
            ylabel('ky')
            axis equal
        end

        if showSignal
            subtightplot(4,4,13,.05,.05,.05)
            plot(kSpaceSignal_f_of_t,'k')
            hold on
            plot(t,kSpaceSignal_f_of_t(t),'ok')
            plot(t*[1 1],[-1.1 1.1]*max([abs(kSpaceSignal_f_of_t) abs(kSpaceSignal_f_of_t)]),'--k')
            xlabel('Time')
            ylabel('kSpaceSignal_f_of_t')
            for ii=1:length(OneEightyPulse)
            plot(OneEightyPulse(ii)*[1 1],ylim,'r','LineWidth',1)
            text(OneEightyPulse(ii),max(ylim),' 180^o')
            end
        end

        subtightplot(4,4,[2:4 6:8 10:12 14:16],.05,.05,.05)
        for x=1:N
            for y=1:N
                % viscircles([x y],.4,'Color','k','LineWidth',1)
                hold on
                p=plot(x,y,'ok','MarkerSize',.1+40*abs(theta(x,y,t))) ;
                plot([0 real(theta(x,y,t))]*.4+x,[0 imag(theta(x,y,t))]*.4+y,'Color','k','LineWidth',5);
                cmap = hot;
                cmap=flipud(cmap);
                cmap=cmap(20:end-20,:);
                set(p,'MarkerFaceColor',cmap(round(abs(angle(theta(x,y,t)))/pi*215)+1,:))
            end
        end
        set(gca,'CameraViewAngleMode','Manual')
        set(gcf,'color','w');
        axis([-1 N+1 -1 N+1])
        axis off
        pause(.01)
        if movmake
            % set(gcf,'Position',UserParam.FullSizeFigurePosition)
            set(gcf,'units','normalized','outerposition',[0 0 1 1])
            %%% Invisible movie creator: Frame capture %%%
            %img = hardcopy(F, '-dzbuffer', '-r0');
            %%
            %figure(F)
            writeVideo(myVideo,getframe(F));
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        end
        %%
        if t<T
            close
        end
    end
    if movmake
        %%% Invisible movie creator: File closing %%%
        close(myVideo);
        disp(['Video created (',filename,')'])
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    end



    if 0
        %% one row only
        movmake=true;
        if movmake
            %%% Invisible movie creator: initialize %%%
            filename =strcat(['movies\sim_kspace_oneRow_',textString,'_',num2str(randi(10000))]);
            myVideo = VideoWriter(filename,'MPEG-4');
            myVideo.FrameRate = 12;
            myVideo.Quality = 85;
            open(myVideo)
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        end
        for t=1:T
            %%
            F=figure;
            subtightplot(1,5,1,.05,.05,.05)
            plot(Gx_strength,'k')
            hold on
            plot(t,Gx_strength(t),'ok')
            plot(t*[1 1],[-1.1 1.1]*max([abs(Gx_strength) abs(Gy_strength)]),'--k')
            xlabel('Time')
            ylabel('Gx')

            subtightplot(1,5,[2:5],.05,.05,.05)
            for x=1:N
                for y=N/2
                    % viscircles([x y],.4,'Color','k','LineWidth',1)
                    hold on
                    p=plot(x,y,'ok','MarkerSize',35) ;
                    plot([0 real(theta(x,y,t))]*.4+x,[0 imag(theta(x,y,t))]*.4+y,'Color','k','LineWidth',5);
                    cmap = hot;
                    cmap=flipud(cmap);
                    cmap=cmap(20:end-20,:);
                    set(p,'MarkerFaceColor',cmap(round(abs(angle(theta(x,y,t)))/pi*215)+1,:))
                end
            end
            set(gca,'CameraViewAngleMode','Manual')
            set(gcf,'color','w');
            axis([-1 N+1 N/2-1 N/2+1])
            pbaspect([4 1 1])
            axis equal off
            pause(.01)
            if movmake
                % set(gcf,'Position',UserParam.FullSizeFigurePosition)
                set(gcf,'units','normalized','outerposition',[0 0 1 1])
                %%% Invisible movie creator: Frame capture %%%
                %img = hardcopy(F, '-dzbuffer', '-r0');
                %%
                %figure(F)
                writeVideo(myVideo,getframe(F));
                %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            end
            if t<T
                close
            end
        end
        if movmake
            %%

            %%% Invisible movie creator: File closing %%%
            close(myVideo);
            disp(['Video created (',filename,')'])
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

        end
    end
end